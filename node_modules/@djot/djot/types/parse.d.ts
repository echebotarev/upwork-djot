import { Options } from "./options";
import { Attributes, Pos, AstNode, Doc, isRow, isBlock, isCaption, isInline } from "./ast";
interface Container {
    children: any[];
    attributes?: Attributes;
    autoAttributes?: Attributes;
    data: Record<string, any>;
    pos?: Pos;
}
declare const getStringContent: (node: (AstNode | Container)) => string;
interface ParseOptions extends Options {
    sourcePositions?: boolean;
}
declare const parse: (input: string, options?: ParseOptions) => Doc;
declare const renderAST: (doc: Doc) => string;
export type { ParseOptions, };
export { parse, renderAST, getStringContent, isBlock, isRow, isCaption, isInline, };
