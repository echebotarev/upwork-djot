import { Doc, AstNode } from "./ast";
type Transform = (node: any) => void | AstNode | AstNode[] | {
    stop: void | AstNode | AstNode[];
};
type Action = Transform | {
    enter: Transform;
    exit?: Transform;
};
type FilterPart = Record<string, Action>;
type Filter = () => (FilterPart | FilterPart[]);
declare const applyFilter: (doc: Doc, filter: Filter) => void;
export type { Action, FilterPart, Filter, };
export { applyFilter, };
