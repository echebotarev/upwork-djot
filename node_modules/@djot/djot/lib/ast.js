"use strict";
// Types defining the AST
Object.defineProperty(exports, "__esModule", { value: true });
exports.isCaption = exports.isRow = exports.isBlock = exports.isInline = void 0;
/* Type predicates */
const blockTags = {
    para: true,
    heading: true,
    block_quote: true,
    thematic_break: true,
    section: true,
    div: true,
    code_block: true,
    raw_block: true,
    bullet_list: true,
    ordered_list: true,
    task_list: true,
    definition_list: true,
    table: true,
    reference: true,
    footnote: true
};
function isBlock(node) {
    return blockTags[node.tag] || false;
}
exports.isBlock = isBlock;
const inlineTags = {
    str: true,
    soft_break: true,
    hard_break: true,
    non_breaking_space: true,
    symb: true,
    verbatim: true,
    raw_inline: true,
    inline_math: true,
    display_math: true,
    url: true,
    email: true,
    footnote_reference: true,
    smart_punctuation: true,
    emph: true,
    strong: true,
    link: true,
    image: true,
    span: true,
    mark: true,
    superscript: true,
    subscript: true,
    insert: true,
    delete: true,
    double_quoted: true,
    single_quoted: true,
};
function isInline(node) {
    return inlineTags[node.tag] || false;
}
exports.isInline = isInline;
function isRow(node) {
    return ("head" in node);
}
exports.isRow = isRow;
function isCaption(node) {
    return (!("head" in node));
}
exports.isCaption = isCaption;
